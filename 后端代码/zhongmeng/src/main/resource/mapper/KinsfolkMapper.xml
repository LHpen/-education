<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongmeng.mapper.KinsfolkMapper">
  <resultMap id="BaseResultMap" type="com.zhongmeng.pojo.Kinsfolk">
    <id column="kid" jdbcType="INTEGER" property="kid" />
    <result column="kname" jdbcType="VARCHAR" property="kname" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="ksex" jdbcType="VARCHAR" property="ksex" />
    <result column="ktype" jdbcType="VARCHAR" property="ktype" />
    <result column="vid" jdbcType="INTEGER" property="vid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    kid, kname, birthday, ksex, ktype, vid
  </sql>
  <select id="selectByExample" parameterType="com.zhongmeng.pojo.KinsfolkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kinsfolk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from kinsfolk
    where kid = #{kid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from kinsfolk
    where kid = #{kid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhongmeng.pojo.KinsfolkExample">
    delete from kinsfolk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhongmeng.pojo.Kinsfolk">
    insert into kinsfolk (kid, kname, birthday, 
      ksex, ktype, vid)
    values (#{kid,jdbcType=INTEGER}, #{kname,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
      #{ksex,jdbcType=VARCHAR}, #{ktype,jdbcType=VARCHAR}, #{vid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zhongmeng.pojo.Kinsfolk">
    insert into kinsfolk
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="kid != null">
        kid,
      </if>
      <if test="kname != null">
        kname,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="ksex != null">
        ksex,
      </if>
      <if test="ktype != null">
        ktype,
      </if>
      <if test="vid != null">
        vid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="kid != null">
        #{kid,jdbcType=INTEGER},
      </if>
      <if test="kname != null">
        #{kname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="ksex != null">
        #{ksex,jdbcType=VARCHAR},
      </if>
      <if test="ktype != null">
        #{ktype,jdbcType=VARCHAR},
      </if>
      <if test="vid != null">
        #{vid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhongmeng.pojo.KinsfolkExample" resultType="java.lang.Long">
    select count(*) from kinsfolk
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kinsfolk
    <set>
      <if test="record.kid != null">
        kid = #{record.kid,jdbcType=INTEGER},
      </if>
      <if test="record.kname != null">
        kname = #{record.kname,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.ksex != null">
        ksex = #{record.ksex,jdbcType=VARCHAR},
      </if>
      <if test="record.ktype != null">
        ktype = #{record.ktype,jdbcType=VARCHAR},
      </if>
      <if test="record.vid != null">
        vid = #{record.vid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kinsfolk
    set kid = #{record.kid,jdbcType=INTEGER},
      kname = #{record.kname,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      ksex = #{record.ksex,jdbcType=VARCHAR},
      ktype = #{record.ktype,jdbcType=VARCHAR},
      vid = #{record.vid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhongmeng.pojo.Kinsfolk">
    update kinsfolk
    <set>
      <if test="kname != null">
        kname = #{kname,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="ksex != null">
        ksex = #{ksex,jdbcType=VARCHAR},
      </if>
      <if test="ktype != null">
        ktype = #{ktype,jdbcType=VARCHAR},
      </if>
      <if test="vid != null">
        vid = #{vid,jdbcType=INTEGER},
      </if>
    </set>
    where kid = #{kid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongmeng.pojo.Kinsfolk">
    update kinsfolk
    set kname = #{kname,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      ksex = #{ksex,jdbcType=VARCHAR},
      ktype = #{ktype,jdbcType=VARCHAR},
      vid = #{vid,jdbcType=INTEGER}
    where kid = #{kid,jdbcType=INTEGER}
  </update>



  <resultMap id="BebeVoResultMap" type="com.zhongmeng.pojo.Kinsfolk">
    <id column="kid" property="kid" jdbcType="INTEGER" />
    <result column="kname" property="kname" jdbcType="VARCHAR" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="ksex" property="ksex" jdbcType="VARCHAR" />
    <result column="ktype" property="ktype" jdbcType="VARCHAR" />
    <result column="vid" property="vid" jdbcType="INTEGER"/>
    <association property="vip" javaType="com.zhongmeng.pojo.Vip">
      <id column="vid" property="vid" jdbcType="INTEGER" />
      <result column="vloginname" property="vloginname" jdbcType="VARCHAR" />
      <result column="code" property="code" jdbcType="VARCHAR" />
      <result column="vpw" property="vpw" jdbcType="VARCHAR" />
      <result column="vname" property="vname" jdbcType="VARCHAR" />
      <result column="viptype" property="viptype" jdbcType="VARCHAR" />
      <result column="tel" property="tel" jdbcType="VARCHAR" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="weixin" property="weixin" jdbcType="VARCHAR" />
      <result column="birthday" property="birthday" jdbcType="VARCHAR" />
      <result column="vsex" property="vsex" jdbcType="VARCHAR" />
      <result column="vaddtime" property="vaddtime" jdbcType="TIMESTAMP" />
      <result column="vaddress" property="vaddress" jdbcType="VARCHAR" />
      <result column="vstate" property="vstate" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <select id="getKinsfolkByName" parameterType="String" resultMap="BebeVoResultMap">
    select
    `kid`,
    `kname`,
    k.`birthday`,
    `ksex`,
    `ktype`,
    v.`vid`,
    `vloginname`,
    `code`,
    `vpw`,
    `vname`,
    `viptype`,
    `tel`,
    `email`,
    `weixin`,
    v.`birthday`,
    `vsex`,
    `vaddtime`,
    `vaddress`,
    `vstate`
    from kinsfolk k
    LEFT JOIN vip v on k.vid = v.vid
    <where>
      kname like '%${kname}%'
    </where>
  </select>
  <select id="findBebeByVid" parameterType="com.zhongmeng.pojo.Kinsfolk" resultMap="BebeVoResultMap">
    select kinsfolk.kid,kinsfolk.kname
    from kinsfolk
    where kinsfolk.vid=#{vid}
  </select>
</mapper>